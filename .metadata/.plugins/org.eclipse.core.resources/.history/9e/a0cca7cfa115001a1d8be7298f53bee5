package DP;


import java.util.Scanner;
 
public class BK2579 {
 
//    public static void main(String[] args) {
//        Scanner sc = new Scanner(System.in);
//         
//        int n = sc.nextInt();
//         
//        int dp[] = new int[n+1];
//        int a[] = new int[n+1];
//         
//        for(int i=1; i<=n; i++){
//            a[i] = sc.nextInt();
//        }
// 
//        dp[1] = a[1];
//        if(n >= 2) dp[2] = dp[1]+a[2];
//     
//        for(int i=3; i<=n; i++){
//            dp[i] = Math.max(dp[i-2]+a[i],dp[i-3]+a[i-1]+a[i]); 
//        }
//         
//        System.out.println(dp[n]);
//         
//         
//    }
	static int dp[];
    static int a[];
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
      
     int n = sc.nextInt();
     dp = new int[n+1];
     a = new int[n+1];
     
     for(int i=1; i<=n; i++){
       a[i] = sc.nextInt();
   }
     System.out.println(stair(n));
	}

	private static int stair(int n) {
		if(n==1) return dp[n]=a[n];
		if(n == 2) return dp[n] = dp[n-1]+a[n];
		dp[n] = Math.max(stair(n-2)+a[n],dp[n-3]+a[n-1]+a[n]);
		return dp[n];
		
	}
 
}